<!-- ============================================================== -->
<!-- footer -->
<!-- ============================================================== -->
<footer class="footer text-center">
  Â© 2018 BioFeedback
</footer>
<!-- ============================================================== -->
<!-- End footer -->
<!-- ============================================================== -->
</div>
<!-- ============================================================== -->
<!-- End Page wrapper  -->
<!-- ============================================================== -->
</div>
<!-- ============================================================== -->
<!-- End Wrapper -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- All Jquery -->
<!-- ============================================================== -->
<script src="<%- baseUrl %>assets/plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap tether Core JavaScript -->
<script src="<%- baseUrl %>assets/plugins/bootstrap/js/tether.min.js"></script>
<script src="<%- baseUrl %>assets/plugins/bootstrap/js/bootstrap.min.js"></script>
<!-- slimscrollbar scrollbar JavaScript -->
<script src="<%- baseUrl %>js/jquery.slimscroll.js"></script>
<!--Wave Effects -->
<script src="<%- baseUrl %>js/waves.js"></script>
<!--Menu sidebar -->
<script src="<%- baseUrl %>js/sidebarmenu.js"></script>
<!--stickey kit -->
<script src="<%- baseUrl %>assets/plugins/sticky-kit-master/dist/sticky-kit.min.js"></script>
<!--Custom JavaScript -->
<script src="<%- baseUrl %>js/custom.min.js"></script>
<!-- ============================================================== -->
<!-- This page plugins -->
<!-- ============================================================== -->

<!-- ============================================================== -->
<!-- Style switcher -->
<!-- ============================================================== -->
<script src="<%- baseUrl %>assets/plugins/styleswitcher/jQuery.style.switcher.js"></script>

<script>


    window.onload = function () {
        var dataPoints1 = [];
        var dataPoints2 = [];

        var chart = new CanvasJS.Chart("chartContainer", {
            zoomEnabled: true,
            title: {
                text: "Share Value of Two Companies"
            },
            axisX: {
                title: "chart updates every 3 secs"
            },
            axisY:{
                prefix: "$",
                includeZero: false
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor:"pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick : toggleDataSeries
            },
            data: [{
                type: "line",
                xValueType: "dateTime",
                yValueFormatString: "$####.00",
                xValueFormatString: "D/M/Y - h:mm: TT",
                showInLegend: true,
                name: "Company A",
                dataPoints: dataPoints1
            },
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "$####.00",
                    showInLegend: true,
                    name: "Company B" ,
                    dataPoints: dataPoints2
                }]
        });

        function toggleDataSeries(e) {
            if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

        var updateInterval = 1000;
// initial value
        var yValue1 = 600;
        var yValue2 = 605;

        function updateChart(datos) {
            //count = count || 1;
            chart.options.data[0].dataPoints = [];
            dataPoints1 = [];
            var deltaY1;
            for (var i = 0; i < datos.length; i++) {

                // adding random value and rounding it to two digits.
                yValue1 = Math.round((yValue1 + deltaY1)*100)/100;


                fecha = new Date(datos[i].x);
                // pushing the new values
                dataPoints1.push({
                    x: fecha.getTime(),
                    y: datos[i].y
                });
            }
            console.log(dataPoints1);
            // updating legend text with  updated with y Value
            chart.options.data[0].dataPoints = dataPoints1;
            chart.options.data[0].legendText = " ECG";
            chart.render();
        }

        function updateChart2(datos) {
            console.log(typeof(datos));
            //var datosJson = JSON.stringify(datos);
            //console.log(typeof(datosJson));
            dataPoints1 = datos;
            //dataPoints2 = datos;

            // updating legend text with  updated with y Value
            chart.options.data[0].legendText = " Company A  $" + yValue1;
            chart.options.data[1].legendText = " Company B  $" + yValue2;
            chart.render();
        }

        var idcond = "<%= conductor._id %>";
        function waitForMsg(id_cond){

            /* This requests the url "msgsrv.php"
            When it complete (or errors)*/
            endpoint = "/signal/get/" + id_cond;
            $.ajax({
                type: "GET",
                url: endpoint,

                async: true, /* If set to non-async, browser shows page as "Loading.."*/
                cache: false,
                timeout:50000, /* Timeout in ms */

                success: function(data){ /* called when request to barge.php completes */
                    //console.log(data); /* Add response to a .msg div (with the "new" class)*/
                    updateChart(data);

                    setTimeout(
                        waitForMsg, /* Request next message */
                        1000, /* ..after 1 seconds */
                        id_cond
                    );
                },
                error: function(XMLHttpRequest, textStatus, errorThrown){
                    console.log("error: " + textStatus + " (" + errorThrown + ")");
                    setTimeout(
                        waitForMsg(id_cond), /* Try again after.. */
                        15000, /* milliseconds (15seconds) */
                        id_cond
                    );
                }
            });
        };

// generates first set of dataPoints
        //updateChart(1);
        //setInterval(function(){updateChart()}, updateInterval);
        waitForMsg(idcond);

    }
</script>

<script src="<%- baseUrl %>js/jquery.canvasjs.min.js"></script>

</body>

</html>